image: docker:19.03.8

services:
  - docker:19.03.8-dind

variables:
 SCAN_KUBERNETES_MANIFESTS: "true"
 DAST_WEBSITE: http://34.132.117.178/notes
 FUZZAPI_PROFILE: Long-100
 FUZZAPI_OPENAPI: test_openapi.v2.0.json
 FUZZAPI_TARGET_URL: http://34.132.117.178

stages:
  - build
  - unit
  - test
  - c-fuzz
  - db
  - deploy
  - dast
  - fuzz

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/DAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: API-Fuzzing.gitlab-ci.yml
  - template: Coverage-Fuzzing.gitlab-ci.yml
  - template: Security/SAST-IaC.latest.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

build:
  image: docker:19.03.8
  stage: build
  variables:
    IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE .
    - docker push $IMAGE

unit:
  image: python:3
  stage: unit
  script:
    - apt update -y
    - apt install libmariadb3 libmariadb-dev sqlite3 libsqlite3-dev -y
    - pip3 install -r requirements.txt
    - python -m unittest tests/test_db.py

fuzz-target:
  image: python:latest
  stage: c-fuzz
  extends: .fuzz_base
  script:
    - pip install --extra-index-url https://gitlab.com/api/v4/projects/19904939/packages/pypi/simple pythonfuzz
    - ./gitlab-cov-fuzz run --engine pythonfuzz -- fuzz.py

gemnasium-python-dependency_scanning:
  variables:
    SECURE_LOG_LEVEL: "debug"
  before_script:
    - apt update
    - apt install libmariadb3 libmariadb-dev sqlite3 libsqlite3-dev -y

deploy_database:
  image: registry.gitlab.com/gitlab-org/cluster-integration/helm-install-image/releases/3.2.4-kube-1.13.12
  stage: db
  script:
    - kubectl config use-context tech-marketing/devsecops/initech/simple-notes:simplenotes
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    # https://github.com/bitnami/charts/tree/master/bitnami/mariadb/
    - helm upgrade --set auth.rootPassword=$DB_ROOT_PWD --set primary.service.clusterIP=None --install mariadb bitnami/mariadb
  environment:
    name: staging

deploy_staging:
  image: registry.gitlab.com/gitlab-org/cluster-integration/helm-install-image/releases/3.2.4-kube-1.13.12
  stage: deploy
  variables:
    IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
    HELM_HOST: "localhost:44134"
  script:
    - kubectl config use-context tech-marketing/devsecops/initech/simple-notes:simplenotes
    - helm upgrade -f helm/values.yaml --set image=$IMAGE --set dbrootpwd=$DB_ROOT_PWD --install notes ./helm
  environment:
    name: staging
  allow_failure: true
