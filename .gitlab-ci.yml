image: docker:20.10.17

services:
  - docker:20.10.17-dind

variables:
 DAST_WEBSITE: http://34.132.117.178/notes
 DAST_BROWSER_SCAN: "true"
 DAST_FULL_SCAN_ENABLED: "true"
 FUZZAPI_PROFILE: Long-100
 FUZZAPI_OPENAPI: test_openapi.v2.0.json
 FUZZAPI_TARGET_URL: http://34.132.117.178

stages:
  - build
  - unit
  - test
  - deploy
  - dast
  - fuzz

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/DAST.gitlab-ci.yml
  - template: API-Fuzzing.gitlab-ci.yml

build:
  stage: build
  variables:
    IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE .
    - docker push "$IMAGE"
  only:
    - main

unit:
  image: python:latest
  stage: unit
  script:
    - apt update -y
    - apt install libmariadb3 libmariadb-dev sqlite3 libsqlite3-dev -y
    - pip3 install -r requirements.txt
    - python -m unittest tests/test_db.py 2>&1 | tee unit.txt
  artifacts:
    paths:
      - unit.txt

deploy_staging:
  image: registry.gitlab.com/gitlab-org/cluster-integration/helm-install-image/releases/3.2.4-kube-1.13.12
  stage: deploy
  variables:
    IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
    HELM_HOST: "localhost:44134"
  script:
    - kubectl config use-context tech-marketing/devsecops/initech/simple-notes:simplenotes
    - helm upgrade -f helm/values.yaml --set image=$IMAGE --set dbrootpwd=$DB_ROOT_PWD --install notes ./helm
  environment:
    name: staging
  allow_failure: true
